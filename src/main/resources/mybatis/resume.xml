<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.resume.ResumeDAOInter">

  <!-- 등록: 추가한 레코드 갯수를 리턴 -->
  <insert id="create" parameterType="dev.mvc.resume.ResumeVO">
    INSERT INTO resume(resumeno, memberno, title, file1, file1saved, thumb1, size1, rdate, 
                      intro, tel, address, career, skills, langskill, wantjob)
    VALUES(resume_seq.nextval, #{memberno}, #{title}, #{file1}, #{file1saved}, #{thumb1}, #{size1}, sysdate,
           #{intro}, #{tel}, #{address}, #{career}, #{skills}, #{langskill}, #{wantjob})
  </insert>
  
  <!-- 조회: 회원 본인 글목록 -->
  <select id="list_all" resultType="dev.mvc.resume.ResumeVO" parameterType="int">
    SELECT resumeno, memberno, title, file1, file1saved, thumb1, size1, rdate, 
           intro, tel, address, career, skills, langskill, wantjob
    FROM resume
    WHERE memberno = #{memberno}
    ORDER BY resumeno DESC
  </select> 
  
  <!-- 조회: 번호로 레코드 조회 -->
  <select id="read" resultType="dev.mvc.resume.ResumeVO" parameterType="int">
    SELECT resumeno, memberno, title, file1, file1saved, thumb1, size1, rdate, 
           intro, tel, address, career, skills, langskill, wantjob
    FROM resume
    WHERE resumeno = #{resumeno}
  </select>
  
  <!-- 수정: 번호로 레코드 수정 -->
  <update id="update_text" parameterType="dev.mvc.resume.ResumeVO">
    UPDATE resume 
    SET  title = #{title}, intro = #{intro}, tel = #{tel}, address = #{address}, career = #{career}, 
         skills = #{skills}, langskill = #{langskill}, wantjob = #{wantjob}
    WHERE resumeno = #{resumeno}
  </update>
  
  <!-- 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.resume.ResumeVO">
    UPDATE resume
    SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
    WHERE resumeno = #{resumeno}
  </update>
  
  <!-- 삭제: 번호로 레코드 삭제 -->
  <delete id="delete" parameterType="int">
    DELETE FROM resume
    WHERE resumeno = #{resumeno}
  </delete>
  
  <!-- 검색 레코드 갯수 -->
    <select id="search_count" resultType="int" parameterType="dev.mvc.resume.ResumeVO">
        SELECT COUNT(*) as cnt
        FROM resume
        <choose>
            <when
                test="(wantjob == null or wantjob == '') and (memberno != 0)"> <!-- 검색하지 않는 경우의 레코드 갯수 (멤버별 목록) -->
                WHERE memberno=#{memberno}
            </when>
            <when
                test="(wantjob != null and wantjob != '') and (memberno != 0)"> <!-- 검색하는 경우의 레코드 갯수 (멤버별 목록) -->
                WHERE memberno=#{memberno} 
                AND (UPPER(title) LIKE '%' || UPPER(#{wantjob}) || '%'
                OR UPPER(intro) LIKE '%' || UPPER(#{wantjob}) || '%'
                OR UPPER(wantjob) LIKE '%' || UPPER(#{wantjob}) || '%')
            </when>

            <when
                test="(wantjob == null or wantjob == '') and (memberno == 0)"> <!-- 검색하지 않는 경우의 레코드 갯수 (전체목록) -->
            </when>
            <when
                test="(wantjob != null and wantjob != '') and (memberno == 0)"> <!-- 검색하는 경우의 레코드 갯수 (전체목록) -->
                WHERE (UPPER(title) LIKE '%' || UPPER(#{wantjob}) || '%'
                OR UPPER(intro) LIKE '%' || UPPER(#{wantjob}) || '%'
                OR UPPER(wantjob) LIKE '%' || UPPER(#{wantjob}) || '%')
            </when>
        </choose>
    </select>
    
    <!-- 카테고리별 검색 + 페이징 목록 -->
  <select id="list_by_memberno_search_paging" resultType="dev.mvc.resume.ResumeVO" parameterType="dev.mvc.resume.ResumeVO">
    SELECT resumeno, memberno, title, file1, file1saved, thumb1, size1, rdate, 
           intro, tel, address, career, skills, langskill, wantjob, r
   FROM (
              SELECT resumeno, memberno, title, file1, file1saved, thumb1, size1, rdate, 
                     intro, tel, address, career, skills, langskill, wantjob, rownum as r
              FROM (
                        SELECT resumeno, memberno, title, file1, file1saved, thumb1, size1, rdate, 
                               intro, tel, address, career, skills, langskill, wantjob
                        FROM resume
                        <choose>
                           <when test="(wantjob == null or wantjob == '') and (memberno != 0)"> <!-- 검색하지 않는 경우의 레코드 갯수 (카테고리 별) -->
                            WHERE memberno=#{memberno}
                          </when >
                          <when test="(wantjob != null and wantjob != '') and (memberno != 0)"> <!-- 검색하는 경우의 레코드 갯수 (카테고리 별)-->
                            WHERE memberno=#{memberno} 
                            AND (UPPER(title) LIKE '%' || UPPER(#{wantjob}) || '%' 
                            OR UPPER(intro) LIKE '%' || UPPER(#{wantjob}) || '%' 
                            OR UPPER(wantjob) LIKE '%' || UPPER(#{wantjob}) || '%')
                          </when>
                          
                          <when test="(wantjob == null or wantjob == '') and (memberno == 0)"> <!-- 검색하지 않는 경우의 레코드 갯수 (카테고리 별) -->
                          </when >
                          <when test="(wantjob != null and wantjob != '') and (memberno == 0)"> <!-- 검색하는 경우의 레코드 갯수 (카테고리 별)-->
                            WHERE (UPPER(title) LIKE '%' || UPPER(#{wantjob}) || '%' 
                            OR UPPER(intro) LIKE '%' || UPPER(#{wantjob}) || '%' 
                            OR UPPER(wantjob) LIKE '%' || UPPER(#{wantjob}) || '%')
                          </when>
                        </choose>
                        ORDER BY resumeno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!--  1 page: WHERE r >= 1  AND r <= 10; 
          2 page: WHERE r >= 11 AND r <= 20;
          3 page: WHERE r >= 21 AND r <= 30; -->
  </select>

 
  
  
  
</mapper>